@page "/books"
@using Biblioteca.Models
@using Biblioteca.ViewModels
@inject BookViewModel ViewModel
@inject NavigationManager NavigationManager

<PageTitle>Libri</PageTitle>

<h1>Books</h1>

@if (ViewModel.Books == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>ISBN</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in ViewModel.Books)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.ISBN</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditBook(book)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteBook(book.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-success" @onclick="AddNewBook">Add New Book</button>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadBooksAsync();
    }

    private void AddNewBook()
    {
        NavigationManager.NavigateTo("/add-book");
    }

    private void EditBook(Book book)
    {
        NavigationManager.NavigateTo($"/edit-book/{book.Id}");
    }

    private async Task DeleteBook(int id)
    {
        await ViewModel.DeleteBookAsync(id);
    }
}